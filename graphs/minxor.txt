ll minxor(const vi &a, int e, int l1, int r1, int l2, int r2) {
	if (l1 >= r1 || l2 >= r2) return LLINF;
	if (e < 0) return 0LL;
	int m1 = l1, m2 = l2;
	while (m1 < r1 && ((a[m1]>>e)&1) == 0) ++m1;
	while (m2 < r2 && ((a[m2]>>e)&1) == 0) ++m2;
	if ((l1 < m1 && l2 < m2) || (m1 < r1 && m2 < r2)) {
		return min(minxor(a, e-1, l1, m1, l2, m2),
					minxor(a, e-1, m1, r1, m2, r2));
	} else {
		return min(minxor(a, e-1, l1, m1, m2, r2),
					minxor(a, e-1, m1, r1, l2, m2)) + (1LL<<e);
	}
}
 
