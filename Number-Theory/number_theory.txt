namespace number_theory{

       const int mod1 = 1e9 + 7 ; 

       template<class T> 
       T Add(T &x, T y, bool inplace = false, T MOD = mod1){
              T ret = (x + y) ; 
              (ret>=MOD)&&(ret-=MOD) ; 
              (ret<0)&&(ret+=MOD) ; 
              if(inplace)x = ret ; 
              return ret ;   
       }       

       template<class T>
       T Mul(T &x, T y, bool inplace = false, T MOD = mod1){
              T ret = (T) x * y % MOD; 
              if(inplace)x = ret ; 
              return ret ;   
       }   

       bool is_prime(long long x){
              if(x<=1)return false ; 
              if(x<=3)return true ; 

              if(x%2 == 0 || x % 3 == 0)
                     return false ; 

              for(long long i = 5; 1ll*i*i<=x ; i+=6){
                     if( x%i == 0 || x%(i+2) == 0 )
                            return false ; 
              }

              return true ; 
       }

       template<class T> 
       T faspow(T x, T y, T MOD = mod1){
              T ret = T(1) ; 
              while(y){
                     (y&1) && (Mul(ret, x, true, MOD)) ; 
                     Mul(x, x, true, MOD) ; 
                     y >>= 1ll ; 
              }
              return ret ; 
       }
}

using namespace number_theory ; 
